Target framework	version		C# language version default
.NET			7.x		C# 11
.NET			6.x		C# 10
.NET			5.x		C# 9.0
.NET Core		3.x		C# 8.0
.NET Core		2.x		C# 7.3

.NET Standard		2.1		C# 8.0
.NET Standard		2.0		C# 7.3
.NET Standard		1.x		C# 7.3

.NET Framework		all		C# 7.3

Note: Although CS 7 features work with just .NET Framework 2.0 in Visual Studio 2016
using System.Linq; // Requires at least .NET Framework 3.5 in which it was introduced // CS 3 // To work in Visual Studio 2008+
using System.Threading.Tasks; // async // Requires at least .NET Framework 4.5 in which it was introduced // CS 5 // To work in Visual Studio 2012+

using System;
using System.Runtime.InteropServices;

class Program
{
    static void Main()
    {
	// Environment.Version property returns the .NET runtime version for .NET 5+ and .NET Core 3.x
	// Not recommend for .NET Framework 4.5+
        Console.WriteLine($"Environment.Version: {Environment.Version}");
	// RuntimeInformation.FrameworkDescription property gets the name of the .NET installation on which an app is running
	// .NET 5+ and .NET Core 3.x // .NET Framework 4.7.1+ // Mono 5.10.1+
        Console.WriteLine($"RuntimeInformation.FrameworkDescription: {RuntimeInformation.FrameworkDescription}");
    }
}




# dotnet 5.0 # dotnet 3.1 # Exists # C:/Program Files/dotnet/ # Prefix  $ dotnet --version
$ export PATH="/C/Users/rajanis/Downloads/.NET/dotnet-sdk-5.0.100-win-x64/":$PATH
# csc # .NET Framework $ csc -version $ csc -langversion:? $ csi -version
$ export PATH=$PATH:"/C/Program Files (x86)/Microsoft Visual Studio/2019/Professional/MSBuild/Current/Bin/Roslyn/"
# nuget $ nuget ? # nuget install Microsoft.Net.Compilers.Toolset -Version 3.9.0
$ export PATH=$PATH:"/C/Users/rajanis/Downloads/NuGet/"
# csc # csi # .NET Core $ csc -version $ csc -langversion:? $ csi -version
$ export PATH=$PATH:"/C/Users/rajanis/.nuget/packages/microsoft.net.compilers.toolset/3.9.0/tasks/net472/"
# devenv $ devenv /?
$ export PATH=$PATH:"/C/Program Files (x86)/Microsoft Visual Studio/2019/Professional/Common7/IDE/"
# ildasm # sn # xsd # SvcUtil # wsdl $ ildasm -? $ sn -version $ xsd -version $ svcutil -version $ wsdl /?
$ export PATH=$PATH:"/C/Program Files (x86)/Microsoft SDKs/Windows/v10.0A/bin/NETFX 4.8 Tools/"
# SQL Server # SqlPackage $ sqlpackage -help
$ export PATH=$PATH:"/C/Program Files (x86)/Microsoft SQL Server/140/DAC/bin/"
# SQL Server # SqlPackage # Visual Studio $ sqlpackage -help
$ export PATH=$PATH:"/C/Program Files (x86)/Microsoft Visual Studio/2019/Professional/Common7/IDE/Extensions/Microsoft/SQLDB/DAC/150/"




# dotnet 5.0 # dotnet 3.1 # Exists # C:\Program Files\dotnet # Prefix > dotnet --version
> set path=C:\Users\rajanis\Downloads\.NET\dotnet-sdk-5.0.100-win-x64\;%path%
# csc # .NET Framework > csc -version > csc -langversion:? > csi -version
> set path=%path%;C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\MSBuild\Current\Bin\Roslyn\
# nuget > nuget ? # nuget install Microsoft.Net.Compilers.Toolset -Version 3.9.0
> set path=%path%;C:\Users\rajanis\Downloads\NuGet\
# csc # csi # .NET Core > csc -version > csc -langversion:? > csi -version
> set path=%path%;C:\Users\rajanis\.nuget\packages\microsoft.net.compilers.toolset\3.9.0\tasks\net472\
# devenv > devenv /?
> set path=%path%;C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\Common7\IDE\
# ildasm # sn # xsd # SvcUtil # wsdl > ildasm -? > sn -version > xsd -version > svcutil -version > wsdl /?
> set path=%path%;C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\
# SQL Server # SqlPackage > sqlpackage -help
> set path=%path%;C:\Program Files (x86)\Microsoft SQL Server\140\DAC\bin\
# SQL Server # SqlPackage # Visual Studio > sqlpackage -help
> set path=%path%;C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\Common7\IDE\Extensions\Microsoft\SQLDB\DAC\150\