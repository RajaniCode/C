1.6 Read All Quests

We've imported System.Linq in the QuestController, so we've got everything we need to add some more methods for retrieving and modifying data.

Controllers/QuestController.cs

using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using System.Collections.Generic;
using System.Linq;

using ForgingAhead.Models;

namespace ForgingAhead.Controllers
{
  public class QuestController : Controller
  {
    private readonly ApplicationDbContext _context;
        
    public QuestController(ApplicationDbContext context)
    {
      _context = context;
    }
    
    [HttpGet]
    public IActionResult Create()
    {
      return View();
    }
    
    [HttpPost]
    public IActionResult Create(Quest quest)
    {
      _context.Quests.Add(quest);
      _context.SaveChanges();
            
      return RedirectToAction("Index");
    }
        
    public IActionResult Index() 
    {
      //Get All Quests Here
      
      return View(  );
    }
  }
}


In the Index action, get a List of everything in the Quests collection and return a View() with that data as an argument.

Answer:
Controllers/QuestController.cs

using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using System.Collections.Generic;
using System.Linq;

using ForgingAhead.Models;

namespace ForgingAhead.Controllers
{
  public class QuestController : Controller
  {
    private readonly ApplicationDbContext _context;
        
    public QuestController(ApplicationDbContext context)
    {
      _context = context;
    }
    
    [HttpGet]
    public IActionResult Create()
    {
      return View();
    }
    
    [HttpPost]
    public IActionResult Create(Quest quest)
    {
      _context.Quests.Add(quest);
      _context.SaveChanges();
            
      return RedirectToAction("Index");
    }
        
    public IActionResult Index() 
    {
      //Get All Quests Here
      var model = _context.Quests.ToList();
      return View(model);
    }
  }
}

